# https://www.serverless.com/framework/docs/providers/aws/guide/serverless.yml/

service: app-wedding
frameworkVersion: '2'
useDotenv: true

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${opt:stage, 'prod'}
  region: ${opt:region, 'us-east-1'}

resources:
  Resources:
    AppS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.s3bucketDomain}
        AccessControl: Private

    AppS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: AppS3Bucket
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal:
                AWS: "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${self:custom.OAI}"
              Action:
              - s3:GetObject
              - s3:PutObject
              - s3:ListBucket
              Resource:
              - arn:aws:s3:::${self:custom.s3bucketDomain}
              - arn:aws:s3:::${self:custom.s3bucketDomain}/*

    AppCloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Origins:
            - DomainName: ${self:custom.s3bucketDomain}.s3.${self:provider.region}.amazonaws.com
              Id: ${self:custom.s3bucketDomain}
              S3OriginConfig:
                OriginAccessIdentity: origin-access-identity/cloudfront/${self:custom.OAI}
          DefaultCacheBehavior:
            TargetOriginId: ${self:custom.s3bucketDomain}
            ViewerProtocolPolicy: redirect-to-https
            AllowedMethods:
              - GET
              - HEAD
            Compress: 'true'
            ForwardedValues:
              QueryString: 'false'
              Cookies:
                Forward: none
          PriceClass: PriceClass_100
          Aliases:
          - ${self:custom.s3bucketDomain}
          DefaultRootObject: index.html
          Enabled: 'true'
          HttpVersion: http2
          CustomErrorResponses:
            - ErrorCode: 404
              ResponseCode: 200
              ResponsePagePath: /index.html
            - ErrorCode: 403
              ResponseCode: 200
              ResponsePagePath: /index.html
          ViewerCertificate:
            AcmCertificateArn: ${self:custom.AcmARN}
            SslSupportMethod: sni-only
            MinimumProtocolVersion: TLSv1.2_2019

    AppRoute53:
      Type: "AWS::Route53::RecordSet"
      Properties:
        HostedZoneId: ${self:custom.DomainHostedZoneId}
        Name: ${self:custom.s3bucketDomain}
        Type: A
        AliasTarget:
          DNSName:
            'Fn::GetAtt': [ AppCloudFrontDistribution, DomainName ]
          HostedZoneId: ${self:custom.HostedZoneId}

  Outputs:
    AppCloudFrontDistributionOutput:
      Value:
        'Fn::GetAtt': [ AppCloudFrontDistribution, DomainName ]

custom:
  AcmARN: arn:aws:acm:us-east-1:813912021779:certificate/1bbc0f19-06c2-461b-897d-1641aa027cf7
  s3bucketDomain: ${self:custom.subdomain.${self:provider.stage}}
  DomainHostedZoneId: Z1000127BR9Y0VIWOVWD
  HostedZoneId: Z35SXDOTRQ7X7K
  OAI: E3H2V4IOMV8CMJ
  subdomain:
    dev: stage.${self:custom.domain}
    prod: ${self:custom.domain}
  domain: 'isrra-y-jess.com'
